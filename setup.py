#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
Quickref

Install the package (install command as root):  # python setup.py install
Build for development:                          $ python setup.py build
Generate the documentation:                     $ python setup.py doc -b latex/html
"""

import os
import sys
import info
from distutils.core import setup
from distutils.extension import Extension
import numpy as np

commands = {}
name = info.name

if sys.version_info < (2, 4):
    raise SystemExit("Moreesc requires Python 2.4 or later.")

# defining the C extensions (generated by Cython)
kw = dict(
    include_dirs=['src', info.name, '.', np.get_include()],
    extra_compile_args=["-O3", "-Wno-cpp"],
    extra_link_args=["-O3"])
lExtensions = [Extension(el, [os.path.join(info.name, el + ".c"), ], **kw)
               for el in ("c_profiles",
                          "c_acous_sys",
                          "c_mech_sys",
                          "c_mech_sys_controller",
                          "c_coupling")]

setup_kwargs = {k: getattr(info, k) for k in dir(info)
                if not k.startswith('__')}
setup_kwargs.pop('copyright')

if __name__ == "__main__":
    if 'doc' in sys.argv[1]:
        try:
            from sphinx.setup_command import BuildDoc
            commands['doc'] = BuildDoc
        except ImportError:
            raise ImportError("Can't 'doc' without Sphinx.")

    if 'cython' in sys.argv[1]:
        import pdb; pdb.set_trace()
        # Default Cython compilation is not recommended
        # docs.cython.org/src/userguide/source_files_and_compilation.html
        try:
            from Cython.Distutils import build_ext
            commands['build_ext'] = build_ext
        except:
            print("You don't seem to have Cython installed.")
            print("Please get a copy from www.cython.org and install it")
            sys.exit(1)

        def cythonizer(f):
            if f.endswith('.c') and os.path.basename(f).startswith('c_'):
                return f[:-1] + 'pyx'
            return f
        for ext in lExtensions:
            ext.sources = [cythonizer(tmp) for tmp in ext.sources]
            ext.pyrex_directives = {
                "warn.unused": False,
                "warn.unused_arg": False,
                "warn.unused_result": False}
        sys.argv[1] = 'build'
    # Cython files to distribute
    cython_files = [os.path.join(info.name, el)
                    for el in os.listdir(info.name)
                    if ((os.path.splitext(el)[-1] in ('.pyx', '.pxd'))
                        or (el[-2:] == '.c' and
                            os.path.exists(el[:-2] + '.pyx')))]

    if len(sys.argv) > 1:
        setup(
            provides=[info.name],
            packages=[info.name, info.name + '.tests'],
            ext_package=info.name,
            ext_modules=lExtensions,
            cmdclass=commands,
            **setup_kwargs)
